name: 施設空き状況チェック＆Discord通知（6時間ごと）

# 6時間に1回（0時、6時、12時、18時）の実行
on:
  schedule:
    - cron: '0 */6 * * *'

  # テスト的に手動実行したい場合
  workflow_dispatch:

jobs:
  check-and-notify:
    runs-on: ubuntu-latest

    steps:
      # 1) リポジトリを取得
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3

      # 2) Python をセットアップ
      - name: Python のセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3) Chrome と ChromeDriver をインストール
      - name: Chrome と Chromedriver のインストール
        run: |
          sudo apt-get update
          # Headless 動作可能な chromium-browser, chromedriver をインストール
          sudo apt-get install -y chromium-browser chromium-chromedriver
          # （場合によっては 'chromium-browser' の代わりに 'google-chrome-stable' を使うことも可能です）

      # 4) Pythonライブラリ（selenium, requests, python-dateutil など）をインストール
      - name: 依存ライブラリをインストール
        run: |
          python -m pip install --upgrade pip
          pip install selenium requests python-dateutil

      # 5) Discord Webhook URL を環境変数にセット
      #    （GitHub の Settings → Secrets に "SECRET_DISCORD_WEBHOOK" を登録しておく）
      - name: 環境変数を設定（Discord Webhook）
        run: echo "SECRET_DISCORD_WEBHOOK=${{ secrets.SECRET_DISCORD_WEBHOOK }}" >> $GITHUB_ENV

      # 6) スクリプトを実行 → last_message.txt と比較し、必要なら Discord 送信
      - name: 空き状況チェックスクリプトを実行
        run: |
          python check_availability.py

      # 7) last_message.txt に変更があればコミット＆プッシュ
      #    差分がある場合のみコミットするためには git-auto-commit-action を使う
      - name: 変更があれば last_message.txt をコミットしてプッシュ
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ':pencil: Update last_message.txt'
          file_pattern: 'last_message.txt'
          # GITHUB_TOKEN を自動的に使ってコミット＆プッシュしてくれる
